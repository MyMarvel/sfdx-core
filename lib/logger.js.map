{"version":3,"file":"logger.js","sources":["../node_modules/safe-json-stringify/index.js","../node_modules/@salesforce/bunyan/lib/bunyan.js","../src/logger.ts"],"sourcesContent":["var hasProp = Object.prototype.hasOwnProperty;\n\nfunction throwsMessage(err) {\n\treturn '[Throws: ' + (err ? err.message : '?') + ']';\n}\n\nfunction safeGetValueFromPropertyOnObject(obj, property) {\n\tif (hasProp.call(obj, property)) {\n\t\ttry {\n\t\t\treturn obj[property];\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn throwsMessage(err);\n\t\t}\n\t}\n\n\treturn obj[property];\n}\n\nfunction ensureProperties(obj) {\n\tvar seen = [ ]; // store references to objects we have seen before\n\n\tfunction visit(obj) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (seen.indexOf(obj) !== -1) {\n\t\t\treturn '[Circular]';\n\t\t}\n\t\tseen.push(obj);\n\n\t\tif (typeof obj.toJSON === 'function') {\n\t\t\ttry {\n\t\t\t\tvar fResult = visit(obj.toJSON());\n\t\t\t\tseen.pop();\n\t\t\t\treturn fResult;\n\t\t\t} catch(err) {\n\t\t\t\treturn throwsMessage(err);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tvar aResult = obj.map(visit);\n\t\t\tseen.pop();\n\t\t\treturn aResult;\n\t\t}\n\n\t\tvar result = Object.keys(obj).reduce(function(result, prop) {\n\t\t\t// prevent faulty defined getter properties\n\t\t\tresult[prop] = visit(safeGetValueFromPropertyOnObject(obj, prop));\n\t\t\treturn result;\n\t\t}, {});\n\t\tseen.pop();\n\t\treturn result;\n\t};\n\n\treturn visit(obj);\n}\n\nmodule.exports = function(data, replacer, space) {\n\treturn JSON.stringify(ensureProperties(data), replacer, space);\n}\n\nmodule.exports.ensureProperties = ensureProperties;\n","/**\n * Copyright (c) 2015 Trent Mick.\n * Copyright (c) 2015 Joyent Inc.\n *\n * The bunyan logging library for node.js.\n *\n * -*- mode: js -*-\n * vim: expandtab:ts=4:sw=4\n */\n\nvar VERSION = '1.8.2';\n\n/*\n * Bunyan log format version. This becomes the 'v' field on all log records.\n * This will be incremented if there is any backward incompatible change to\n * the log record format. Details will be in 'CHANGES.md' (the change log).\n */\nvar LOG_VERSION = 0;\n\n\nvar xxx = function xxx(s) {     // internal dev/debug logging\n    var args = ['XX' + 'X: '+s].concat(\n        Array.prototype.slice.call(arguments, 1));\n    console.error.apply(this, args);\n};\nvar xxx = function xxx() {};  // comment out to turn on debug logging\n\n\n/*\n * Runtime environment notes:\n *\n * Bunyan is intended to run in a number of runtime environments. Here are\n * some notes on differences for those envs and how the code copes.\n *\n * - node.js: The primary target environment.\n * - NW.js: http://nwjs.io/  An *app* environment that feels like both a\n *   node env -- it has node-like globals (`process`, `global`) and\n *   browser-like globals (`window`, `navigator`). My *understanding* is that\n *   bunyan can operate as if this is vanilla node.js.\n * - browser: Failing the above, we sniff using the `window` global\n *   <https://developer.mozilla.org/en-US/docs/Web/API/Window/window>.\n *      - browserify: http://browserify.org/  A browser-targetting bundler of\n *        node.js deps. The runtime is a browser env, so can't use fs access,\n *        etc. Browserify's build looks for `require(<single-string>)` imports\n *        to bundle. For some imports it won't be able to handle, we \"hide\"\n *        from browserify with `require('frobshizzle' + '')`.\n * - Other? Please open issues if things are broken.\n */\nvar runtimeEnv;\nif (typeof (process) !== 'undefined' && process.versions) {\n    if (process.versions.nw) {\n        runtimeEnv = 'nw';\n    } else if (process.versions.node) {\n        runtimeEnv = 'node';\n    }\n}\nif (!runtimeEnv && typeof (window) !== 'undefined' &&\n    window.window === window) {\n    runtimeEnv = 'browser';\n}\nif (!runtimeEnv) {\n    throw new Error('unknown runtime environment');\n}\n\n\nvar os, fs, dtrace;\nif (runtimeEnv === 'browser') {\n    os = {\n        hostname: function () {\n            return window.location.host;\n        }\n    };\n    fs = {};\n    dtrace = null;\n} else {\n    os = require('os');\n    fs = require('fs');\n    \n    if (process.env.BUNYAN_DTRACE) {\n        try {\n            dtrace = require('dtrace-provider' + '');\n        } catch (e) {\n            dtrace = null;\n        }\n    } else {\n        dtrace = null;\n    }\n}\nvar util = require('util');\nvar assert = require('assert');\nvar EventEmitter = require('events').EventEmitter;\nvar stream = require('stream');\n\ntry {\n    var safeJsonStringify = require('safe-json-stringify');\n} catch (e) {\n    safeJsonStringify = null;\n}\nif (process.env.BUNYAN_TEST_NO_SAFE_JSON_STRINGIFY) {\n    safeJsonStringify = null;\n}\n\n// The 'mv' module is required for rotating-file stream support.\ntry {\n    var mv = require('mv' + '');\n} catch (e) {\n    mv = null;\n}\n\ntry {\n    var sourceMapSupport = require('source-map-support' + '');\n} catch (_) {\n    sourceMapSupport = null;\n}\n\n\n//---- Internal support stuff\n\n/**\n * A shallow copy of an object. Bunyan logging attempts to never cause\n * exceptions, so this function attempts to handle non-objects gracefully.\n */\nfunction objCopy(obj) {\n    if (obj == null) {  // null or undefined\n        return obj;\n    } else if (Array.isArray(obj)) {\n        return obj.slice();\n    } else if (typeof (obj) === 'object') {\n        var copy = {};\n        Object.keys(obj).forEach(function (k) {\n            copy[k] = obj[k];\n        });\n        return copy;\n    } else {\n        return obj;\n    }\n}\n\nvar format = util.format;\nif (!format) {\n    // If node < 0.6, then use its `util.format`:\n    // <https://github.com/joyent/node/blob/master/lib/util.js#L22>:\n    var inspect = util.inspect;\n    var formatRegExp = /%[sdj%]/g;\n    format = function format(f) {\n        if (typeof (f) !== 'string') {\n            var objects = [];\n            for (var i = 0; i < arguments.length; i++) {\n                objects.push(inspect(arguments[i]));\n            }\n            return objects.join(' ');\n        }\n\n        var i = 1;\n        var args = arguments;\n        var len = args.length;\n        var str = String(f).replace(formatRegExp, function (x) {\n            if (i >= len)\n                return x;\n            switch (x) {\n                case '%s': return String(args[i++]);\n                case '%d': return Number(args[i++]);\n                case '%j': return JSON.stringify(args[i++], safeCycles());\n                case '%%': return '%';\n                default:\n                    return x;\n            }\n        });\n        for (var x = args[i]; i < len; x = args[++i]) {\n            if (x === null || typeof (x) !== 'object') {\n                str += ' ' + x;\n            } else {\n                str += ' ' + inspect(x);\n            }\n        }\n        return str;\n    };\n}\n\n\n/**\n * Gather some caller info 3 stack levels up.\n * See <http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi>.\n */\nfunction getCaller3Info() {\n    if (this === undefined) {\n        // Cannot access caller info in 'strict' mode.\n        return;\n    }\n    var obj = {};\n    var saveLimit = Error.stackTraceLimit;\n    var savePrepare = Error.prepareStackTrace;\n    Error.stackTraceLimit = 3;\n    Error.captureStackTrace(this, getCaller3Info);\n\n    Error.prepareStackTrace = function (_, stack) {\n        var caller = stack[2];\n        if (sourceMapSupport) {\n            caller = sourceMapSupport.wrapCallSite(caller);\n        }\n        obj.file = caller.getFileName();\n        obj.line = caller.getLineNumber();\n        var func = caller.getFunctionName();\n        if (func)\n            obj.func = func;\n    };\n    this.stack;\n    Error.stackTraceLimit = saveLimit;\n    Error.prepareStackTrace = savePrepare;\n    return obj;\n}\n\n\nfunction _indent(s, indent) {\n    if (!indent) indent = '    ';\n    var lines = s.split(/\\r?\\n/g);\n    return indent + lines.join('\\n' + indent);\n}\n\n\n/**\n * Warn about an bunyan processing error.\n *\n * @param msg {String} Message with which to warn.\n * @param dedupKey {String} Optional. A short string key for this warning to\n *      have its warning only printed once.\n */\nfunction _warn(msg, dedupKey) {\n    assert.ok(msg);\n    if (dedupKey) {\n        if (_warned[dedupKey]) {\n            return;\n        }\n        _warned[dedupKey] = true;\n    }\n    process.stderr.write(msg + '\\n');\n}\nfunction _haveWarned(dedupKey) {\n    return _warned[dedupKey];\n}\nvar _warned = {};\n\n\nfunction ConsoleRawStream() {}\nConsoleRawStream.prototype.write = function (rec) {\n    if (rec.level < INFO) {\n        console.log(rec);\n    } else if (rec.level < WARN) {\n        console.info(rec);\n    } else if (rec.level < ERROR) {\n        console.warn(rec);\n    } else {\n        console.error(rec);\n    }\n};\n\n\n//---- Levels\n\nvar TRACE = 10;\nvar DEBUG = 20;\nvar INFO = 30;\nvar WARN = 40;\nvar ERROR = 50;\nvar FATAL = 60;\n\nvar levelFromName = {\n    'trace': TRACE,\n    'debug': DEBUG,\n    'info': INFO,\n    'warn': WARN,\n    'error': ERROR,\n    'fatal': FATAL\n};\nvar nameFromLevel = {};\nObject.keys(levelFromName).forEach(function (name) {\n    nameFromLevel[levelFromName[name]] = name;\n});\n\n// Dtrace probes.\nvar dtp = undefined;\nvar probes = dtrace && {};\n\n/**\n * Resolve a level number, name (upper or lowercase) to a level number value.\n *\n * @param nameOrNum {String|Number} A level name (case-insensitive) or positive\n *      integer level.\n * @api public\n */\nfunction resolveLevel(nameOrNum) {\n    var level;\n    var type = typeof (nameOrNum);\n    if (type === 'string') {\n        level = levelFromName[nameOrNum.toLowerCase()];\n        if (!level) {\n            throw new Error(format('unknown level name: \"%s\"', nameOrNum));\n        }\n    } else if (type !== 'number') {\n        throw new TypeError(format('cannot resolve level: invalid arg (%s):',\n            type, nameOrNum));\n    } else if (nameOrNum < 0 || Math.floor(nameOrNum) !== nameOrNum) {\n        throw new TypeError(format('level is not a positive integer: %s',\n            nameOrNum));\n    } else {\n        level = nameOrNum;\n    }\n    return level;\n}\n\n\nfunction isWritable(obj) {\n    if (obj instanceof stream.Writable) {\n        return true;\n    }\n    return typeof (obj.write) === 'function';\n}\n\n\n//---- Logger class\n\n/**\n * Create a Logger instance.\n *\n * @param options {Object} See documentation for full details. At minimum\n *    this must include a 'name' string key. Configuration keys:\n *      - `streams`: specify the logger output streams. This is an array of\n *        objects with these fields:\n *          - `type`: The stream type. See README.md for full details.\n *            Often this is implied by the other fields. Examples are\n *            'file', 'stream' and \"raw\".\n *          - `level`: Defaults to 'info'.\n *          - `path` or `stream`: The specify the file path or writeable\n *            stream to which log records are written. E.g.\n *            `stream: process.stdout`.\n *          - `closeOnExit` (boolean): Optional. Default is true for a\n *            'file' stream when `path` is given, false otherwise.\n *        See README.md for full details.\n *      - `level`: set the level for a single output stream (cannot be used\n *        with `streams`)\n *      - `stream`: the output stream for a logger with just one, e.g.\n *        `process.stdout` (cannot be used with `streams`)\n *      - `serializers`: object mapping log record field names to\n *        serializing functions. See README.md for details.\n *      - `src`: Boolean (default false). Set true to enable 'src' automatic\n *        field with log call source info.\n *    All other keys are log record fields.\n *\n * An alternative *internal* call signature is used for creating a child:\n *    new Logger(<parent logger>, <child options>[, <child opts are simple>]);\n *\n * @param _childSimple (Boolean) An assertion that the given `_childOptions`\n *    (a) only add fields (no config) and (b) no serialization handling is\n *    required for them. IOW, this is a fast path for frequent child\n *    creation.\n */\nfunction Logger(options, _childOptions, _childSimple) {\n    xxx('Logger start:', options)\n    if (!(this instanceof Logger)) {\n        return new Logger(options, _childOptions);\n    }\n\n    // Input arg validation.\n    var parent;\n    if (_childOptions !== undefined) {\n        parent = options;\n        options = _childOptions;\n        if (!(parent instanceof Logger)) {\n            throw new TypeError(\n                'invalid Logger creation: do not pass a second arg');\n        }\n    }\n    if (!options) {\n        throw new TypeError('options (object) is required');\n    }\n    if (!parent) {\n        if (!options.name) {\n            throw new TypeError('options.name (string) is required');\n        }\n    } else {\n        if (options.name) {\n            throw new TypeError(\n                'invalid options.name: child cannot set logger name');\n        }\n    }\n    if (options.stream && options.streams) {\n        throw new TypeError('cannot mix \"streams\" and \"stream\" options');\n    }\n    if (options.streams && !Array.isArray(options.streams)) {\n        throw new TypeError('invalid options.streams: must be an array')\n    }\n    if (options.serializers && (typeof (options.serializers) !== 'object' ||\n            Array.isArray(options.serializers))) {\n        throw new TypeError('invalid options.serializers: must be an object')\n    }\n\n    EventEmitter.call(this);\n\n    // Fast path for simple child creation.\n    if (parent && _childSimple) {\n        // `_isSimpleChild` is a signal to stream close handling that this child\n        // owns none of its streams.\n        this._isSimpleChild = true;\n\n        this._level = parent._level;\n        this.streams = parent.streams;\n        this.serializers = parent.serializers;\n        this.src = parent.src;\n        var fields = this.fields = {};\n        var parentFieldNames = Object.keys(parent.fields);\n        for (var i = 0; i < parentFieldNames.length; i++) {\n            var name = parentFieldNames[i];\n            fields[name] = parent.fields[name];\n        }\n        var names = Object.keys(options);\n        for (var i = 0; i < names.length; i++) {\n            var name = names[i];\n            fields[name] = options[name];\n        }\n        return;\n    }\n\n    // Start values.\n    var self = this;\n    if (parent) {\n        this._level = parent._level;\n        this.streams = [];\n        for (var i = 0; i < parent.streams.length; i++) {\n            var s = objCopy(parent.streams[i]);\n            s.closeOnExit = false; // Don't own parent stream.\n            this.streams.push(s);\n        }\n        this.serializers = objCopy(parent.serializers);\n        this.src = parent.src;\n        this.fields = objCopy(parent.fields);\n        if (options.level) {\n            this.level(options.level);\n        }\n    } else {\n        this._level = Number.POSITIVE_INFINITY;\n        this.streams = [];\n        this.serializers = null;\n        this.src = false;\n        this.fields = {};\n    }\n\n    if (!dtp && dtrace) {\n        dtp = dtrace.createDTraceProvider('bunyan');\n\n        for (var level in levelFromName) {\n            var probe;\n\n            probes[levelFromName[level]] = probe =\n                dtp.addProbe('log-' + level, 'char *');\n\n            // Explicitly add a reference to dtp to prevent it from being GC'd\n            probe.dtp = dtp;\n        }\n\n        dtp.enable();\n    }\n\n    // Handle *config* options (i.e. options that are not just plain data\n    // for log records).\n    if (options.stream) {\n        self.addStream({\n            type: 'stream',\n            stream: options.stream,\n            closeOnExit: false,\n            level: options.level\n        });\n    } else if (options.streams) {\n        options.streams.forEach(function (s) {\n            self.addStream(s, options.level);\n        });\n    } else if (parent && options.level) {\n        this.level(options.level);\n    } else if (!parent) {\n        if (runtimeEnv === 'browser') {\n            /*\n             * In the browser we'll be emitting to console.log by default.\n             * Any console.log worth its salt these days can nicely render\n             * and introspect objects (e.g. the Firefox and Chrome console)\n             * so let's emit the raw log record. Are there browsers for which\n             * that breaks things?\n             */\n            self.addStream({\n                type: 'raw',\n                stream: new ConsoleRawStream(),\n                closeOnExit: false,\n                level: options.level\n            });\n        } else {\n            self.addStream({\n                type: 'stream',\n                stream: process.stdout,\n                closeOnExit: false,\n                level: options.level\n            });\n        }\n    }\n    if (options.serializers) {\n        self.addSerializers(options.serializers);\n    }\n    if (options.src) {\n        this.src = true;\n    }\n    xxx('Logger: ', self)\n\n    // Fields.\n    // These are the default fields for log records (minus the attributes\n    // removed in this constructor). To allow storing raw log records\n    // (unrendered), `this.fields` must never be mutated. Create a copy for\n    // any changes.\n    var fields = objCopy(options);\n    delete fields.stream;\n    delete fields.level;\n    delete fields.streams;\n    delete fields.serializers;\n    delete fields.src;\n    if (this.serializers) {\n        this._applySerializers(fields);\n    }\n    if (!fields.hostname && !self.fields.hostname) {\n        fields.hostname = os.hostname();\n    }\n    if (!fields.pid) {\n        fields.pid = process.pid;\n    }\n    Object.keys(fields).forEach(function (k) {\n        self.fields[k] = fields[k];\n    });\n}\n\nutil.inherits(Logger, EventEmitter);\n\n\n/**\n * Add a stream\n *\n * @param stream {Object}. Object with these fields:\n *    - `type`: The stream type. See README.md for full details.\n *      Often this is implied by the other fields. Examples are\n *      'file', 'stream' and \"raw\".\n *    - `path` or `stream`: The specify the file path or writeable\n *      stream to which log records are written. E.g.\n *      `stream: process.stdout`.\n *    - `level`: Optional. Falls back to `defaultLevel`.\n *    - `closeOnExit` (boolean): Optional. Default is true for a\n *      'file' stream when `path` is given, false otherwise.\n *    See README.md for full details.\n * @param defaultLevel {Number|String} Optional. A level to use if\n *      `stream.level` is not set. If neither is given, this defaults to INFO.\n */\nLogger.prototype.addStream = function addStream(s, defaultLevel) {\n    var self = this;\n    if (defaultLevel === null || defaultLevel === undefined) {\n        defaultLevel = INFO;\n    }\n\n    s = objCopy(s);\n\n    // Implicit 'type' from other args.\n    if (!s.type) {\n        if (s.stream) {\n            s.type = 'stream';\n        } else if (s.path) {\n            s.type = 'file'\n        }\n    }\n    s.raw = (s.type === 'raw');  // PERF: Allow for faster check in `_emit`.\n\n    if (s.level !== undefined) {\n        s.level = resolveLevel(s.level);\n    } else {\n        s.level = resolveLevel(defaultLevel);\n    }\n    if (s.level < self._level) {\n        self._level = s.level;\n    }\n\n    switch (s.type) {\n    case 'stream':\n        assert.ok(isWritable(s.stream),\n                  '\"stream\" stream is not writable: ' + util.inspect(s.stream));\n\n        if (!s.closeOnExit) {\n            s.closeOnExit = false;\n        }\n        break;\n    case 'file':\n        if (s.reemitErrorEvents === undefined) {\n            s.reemitErrorEvents = true;\n        }\n        if (!s.stream) {\n            s.stream = fs.createWriteStream(s.path,\n                                            {flags: 'a', encoding: 'utf8'});\n            if (!s.closeOnExit) {\n                s.closeOnExit = true;\n            }\n        } else {\n            if (!s.closeOnExit) {\n                s.closeOnExit = false;\n            }\n        }\n        break;\n    case 'rotating-file':\n        assert.ok(!s.stream,\n                  '\"rotating-file\" stream should not give a \"stream\"');\n        assert.ok(s.path);\n        assert.ok(mv, '\"rotating-file\" stream type is not supported: '\n                      + 'missing \"mv\" module');\n        s.stream = new RotatingFileStream(s);\n        if (!s.closeOnExit) {\n            s.closeOnExit = true;\n        }\n        break;\n    case 'raw':\n        if (!s.closeOnExit) {\n            s.closeOnExit = false;\n        }\n        break;\n    default:\n        throw new TypeError('unknown stream type \"' + s.type + '\"');\n    }\n\n    if (s.reemitErrorEvents && typeof (s.stream.on) === 'function') {\n        // TODO: When we have `<logger>.close()`, it should remove event\n        //      listeners to not leak Logger instances.\n        s.stream.on('error', function onStreamError(err) {\n            self.emit('error', err, s);\n        });\n    }\n\n    self.streams.push(s);\n    delete self.haveNonRawStreams;  // reset\n}\n\n\n/**\n * Add serializers\n *\n * @param serializers {Object} Optional. Object mapping log record field names\n *    to serializing functions. See README.md for details.\n */\nLogger.prototype.addSerializers = function addSerializers(serializers) {\n    var self = this;\n\n    if (!self.serializers) {\n        self.serializers = {};\n    }\n    Object.keys(serializers).forEach(function (field) {\n        var serializer = serializers[field];\n        if (typeof (serializer) !== 'function') {\n            throw new TypeError(format(\n                'invalid serializer for \"%s\" field: must be a function',\n                field));\n        } else {\n            self.serializers[field] = serializer;\n        }\n    });\n}\n\n\n\n/**\n * Create a child logger, typically to add a few log record fields.\n *\n * This can be useful when passing a logger to a sub-component, e.g. a\n * 'wuzzle' component of your service:\n *\n *    var wuzzleLog = log.child({component: 'wuzzle'})\n *    var wuzzle = new Wuzzle({..., log: wuzzleLog})\n *\n * Then log records from the wuzzle code will have the same structure as\n * the app log, *plus the component='wuzzle' field*.\n *\n * @param options {Object} Optional. Set of options to apply to the child.\n *    All of the same options for a new Logger apply here. Notes:\n *      - The parent's streams are inherited and cannot be removed in this\n *        call. Any given `streams` are *added* to the set inherited from\n *        the parent.\n *      - The parent's serializers are inherited, though can effectively be\n *        overwritten by using duplicate keys.\n *      - Can use `level` to set the level of the streams inherited from\n *        the parent. The level for the parent is NOT affected.\n * @param simple {Boolean} Optional. Set to true to assert that `options`\n *    (a) only add fields (no config) and (b) no serialization handling is\n *    required for them. IOW, this is a fast path for frequent child\n *    creation. See 'tools/timechild.js' for numbers.\n */\nLogger.prototype.child = function (options, simple) {\n    return new (this.constructor)(this, options || {}, simple);\n}\n\n\n/**\n * A convenience method to reopen 'file' streams on a logger. This can be\n * useful with external log rotation utilities that move and re-open log files\n * (e.g. logrotate on Linux, logadm on SmartOS/Illumos). Those utilities\n * typically have rotation options to copy-and-truncate the log file, but\n * you may not want to use that. An alternative is to do this in your\n * application:\n *\n *      var log = bunyan.createLogger(...);\n *      ...\n *      process.on('SIGUSR2', function () {\n *          log.reopenFileStreams();\n *      });\n *      ...\n *\n * See <https://github.com/trentm/node-bunyan/issues/104>.\n */\nLogger.prototype.reopenFileStreams = function () {\n    var self = this;\n    self.streams.forEach(function (s) {\n        if (s.type === 'file') {\n            if (s.stream) {\n                // Not sure if typically would want this, or more immediate\n                // `s.stream.destroy()`.\n                s.stream.end();\n                s.stream.destroySoon();\n                delete s.stream;\n            }\n            s.stream = fs.createWriteStream(s.path,\n                {flags: 'a', encoding: 'utf8'});\n            s.stream.on('error', function (err) {\n                self.emit('error', err, s);\n            });\n        }\n    });\n};\n\n\n/* BEGIN JSSTYLED */\n/**\n * Close this logger.\n *\n * This closes streams (that it owns, as per 'endOnClose' attributes on\n * streams), etc. Typically you **don't** need to bother calling this.\nLogger.prototype.close = function () {\n    if (this._closed) {\n        return;\n    }\n    if (!this._isSimpleChild) {\n        self.streams.forEach(function (s) {\n            if (s.endOnClose) {\n                xxx('closing stream s:', s);\n                s.stream.end();\n                s.endOnClose = false;\n            }\n        });\n    }\n    this._closed = true;\n}\n */\n/* END JSSTYLED */\n\n\n/**\n * Get/set the level of all streams on this logger.\n *\n * Get Usage:\n *    // Returns the current log level (lowest level of all its streams).\n *    log.level() -> INFO\n *\n * Set Usage:\n *    log.level(INFO)       // set all streams to level INFO\n *    log.level('info')     // can use 'info' et al aliases\n */\nLogger.prototype.level = function level(value) {\n    if (value === undefined) {\n        return this._level;\n    }\n    var newLevel = resolveLevel(value);\n    var len = this.streams.length;\n    for (var i = 0; i < len; i++) {\n        this.streams[i].level = newLevel;\n    }\n    this._level = newLevel;\n}\n\n\n/**\n * Get/set the level of a particular stream on this logger.\n *\n * Get Usage:\n *    // Returns an array of the levels of each stream.\n *    log.levels() -> [TRACE, INFO]\n *\n *    // Returns a level of the identified stream.\n *    log.levels(0) -> TRACE      // level of stream at index 0\n *    log.levels('foo')           // level of stream with name 'foo'\n *\n * Set Usage:\n *    log.levels(0, INFO)         // set level of stream 0 to INFO\n *    log.levels(0, 'info')       // can use 'info' et al aliases\n *    log.levels('foo', WARN)     // set stream named 'foo' to WARN\n *\n * Stream names: When streams are defined, they can optionally be given\n * a name. For example,\n *       log = new Logger({\n *         streams: [\n *           {\n *             name: 'foo',\n *             path: '/var/log/my-service/foo.log'\n *             level: 'trace'\n *           },\n *         ...\n *\n * @param name {String|Number} The stream index or name.\n * @param value {Number|String} The level value (INFO) or alias ('info').\n *    If not given, this is a 'get' operation.\n * @throws {Error} If there is no stream with the given name.\n */\nLogger.prototype.levels = function levels(name, value) {\n    if (name === undefined) {\n        assert.equal(value, undefined);\n        return this.streams.map(\n            function (s) { return s.level });\n    }\n    var stream;\n    if (typeof (name) === 'number') {\n        stream = this.streams[name];\n        if (stream === undefined) {\n            throw new Error('invalid stream index: ' + name);\n        }\n    } else {\n        var len = this.streams.length;\n        for (var i = 0; i < len; i++) {\n            var s = this.streams[i];\n            if (s.name === name) {\n                stream = s;\n                break;\n            }\n        }\n        if (!stream) {\n            throw new Error(format('no stream with name \"%s\"', name));\n        }\n    }\n    if (value === undefined) {\n        return stream.level;\n    } else {\n        var newLevel = resolveLevel(value);\n        stream.level = newLevel;\n        if (newLevel < this._level) {\n            this._level = newLevel;\n        }\n    }\n}\n\n\n/**\n * Apply registered serializers to the appropriate keys in the given fields.\n *\n * Pre-condition: This is only called if there is at least one serializer.\n *\n * @param fields (Object) The log record fields.\n * @param excludeFields (Object) Optional mapping of keys to `true` for\n *    keys to NOT apply a serializer.\n */\nLogger.prototype._applySerializers = function (fields, excludeFields) {\n    var self = this;\n\n    xxx('_applySerializers: excludeFields', excludeFields);\n\n    // Check each serializer against these (presuming number of serializers\n    // is typically less than number of fields).\n    Object.keys(this.serializers).forEach(function (name) {\n        if (fields[name] === undefined ||\n            (excludeFields && excludeFields[name]))\n        {\n            return;\n        }\n        xxx('_applySerializers; apply to \"%s\" key', name)\n        try {\n            fields[name] = self.serializers[name](fields[name]);\n        } catch (err) {\n            _warn(format('bunyan: ERROR: Exception thrown from the \"%s\" '\n                + 'Bunyan serializer. This should never happen. This is a bug'\n                + 'in that serializer function.\\n%s',\n                name, err.stack || err));\n            fields[name] = format('(Error in Bunyan log \"%s\" serializer '\n                + 'broke field. See stderr for details.)', name);\n        }\n    });\n}\n\n\n/**\n * Emit a log record.\n *\n * @param rec {log record}\n * @param noemit {Boolean} Optional. Set to true to skip emission\n *      and just return the JSON string.\n */\nLogger.prototype._emit = function (rec, noemit) {\n    var i;\n\n    // Lazily determine if this Logger has non-'raw' streams. If there are\n    // any, then we need to stringify the log record.\n    if (this.haveNonRawStreams === undefined) {\n        this.haveNonRawStreams = false;\n        for (i = 0; i < this.streams.length; i++) {\n            if (!this.streams[i].raw) {\n                this.haveNonRawStreams = true;\n                break;\n            }\n        }\n    }\n\n    // Stringify the object. Attempt to warn/recover on error.\n    var str;\n    if (noemit || this.haveNonRawStreams) {\n        try {\n            str = JSON.stringify(rec, safeCycles()) + '\\n';\n        } catch (e) {\n            if (safeJsonStringify) {\n                str = safeJsonStringify(rec) + '\\n';\n            } else {\n                var dedupKey = e.stack.split(/\\n/g, 2).join('\\n');\n                _warn('bunyan: ERROR: Exception in '\n                    + '`JSON.stringify(rec)`. You can install the '\n                    + '\"safe-json-stringify\" module to have Bunyan fallback '\n                    + 'to safer stringification. Record:\\n'\n                    + _indent(format('%s\\n%s', util.inspect(rec), e.stack)),\n                    dedupKey);\n                str = format('(Exception in JSON.stringify(rec): %j. '\n                    + 'See stderr for details.)\\n', e.message);\n            }\n        }\n    }\n\n    if (noemit)\n        return str;\n\n    var level = rec.level;\n    for (i = 0; i < this.streams.length; i++) {\n        var s = this.streams[i];\n        if (s.level <= level) {\n            xxx('writing log rec \"%s\" to \"%s\" stream (%d <= %d): %j',\n                rec.msg, s.type, s.level, level, rec);\n            s.stream.write(s.raw ? rec : str);\n        }\n    };\n\n    return str;\n}\n\n\n/**\n * Build a log emitter function for level minLevel. I.e. this is the\n * creator of `log.info`, `log.error`, etc.\n */\nfunction mkLogEmitter(minLevel) {\n    return function () {\n        var log = this;\n\n        function mkRecord(args) {\n            var excludeFields;\n            if (args[0] instanceof Error) {\n                // `log.<level>(err, ...)`\n                fields = {\n                    // Use this Logger's err serializer, if defined.\n                    err: (log.serializers && log.serializers.err\n                        ? log.serializers.err(args[0])\n                        : Logger.stdSerializers.err(args[0]))\n                };\n                excludeFields = {err: true};\n                if (args.length === 1) {\n                    msgArgs = [fields.err.message];\n                } else {\n                    msgArgs = Array.prototype.slice.call(args, 1);\n                }\n            } else if (typeof (args[0]) !== 'object' && args[0] !== null ||\n                       Array.isArray(args[0])) {\n                // `log.<level>(msg, ...)`\n                fields = null;\n                msgArgs = Array.prototype.slice.call(args);\n            } else if (Buffer.isBuffer(args[0])) {  // `log.<level>(buf, ...)`\n                // Almost certainly an error, show `inspect(buf)`. See bunyan\n                // issue #35.\n                fields = null;\n                msgArgs = Array.prototype.slice.call(args);\n                msgArgs[0] = util.inspect(msgArgs[0]);\n            } else {  // `log.<level>(fields, msg, ...)`\n                fields = args[0];\n                if (args.length === 1 && fields.err\n                    && fields.err instanceof Error)\n                {\n                    msgArgs = [fields.err.message];\n                } else {\n                    msgArgs = Array.prototype.slice.call(args, 1);\n                }\n            }\n\n            // Build up the record object.\n            var rec = objCopy(log.fields);\n            var level = rec.level = minLevel;\n            var recFields = (fields ? objCopy(fields) : null);\n            if (recFields) {\n                if (log.serializers) {\n                    log._applySerializers(recFields, excludeFields);\n                }\n                Object.keys(recFields).forEach(function (k) {\n                    rec[k] = recFields[k];\n                });\n            }\n            rec.msg = format.apply(log, msgArgs);\n            if (!rec.time) {\n                rec.time = (new Date());\n            }\n            // Get call source info\n            if (log.src && !rec.src) {\n                rec.src = getCaller3Info()\n            }\n            rec.v = LOG_VERSION;\n\n            return rec;\n        };\n\n        var fields = null;\n        var msgArgs = arguments;\n        var str = null;\n        var rec = null;\n        if (! this._emit) {\n            /*\n             * Show this invalid Bunyan usage warning *once*.\n             *\n             * See <https://github.com/trentm/node-bunyan/issues/100> for\n             * an example of how this can happen.\n             */\n            var dedupKey = 'unbound';\n            if (!_haveWarned[dedupKey]) {\n                var caller = getCaller3Info();\n                _warn(format('bunyan usage error: %s:%s: attempt to log '\n                    + 'with an unbound log method: `this` is: %s',\n                    caller.file, caller.line, util.inspect(this)),\n                    dedupKey);\n            }\n            return;\n        } else if (arguments.length === 0) {   // `log.<level>()`\n            return (this._level <= minLevel);\n        } else if (this._level > minLevel) {\n            /* pass through */\n        } else {\n            rec = mkRecord(msgArgs);\n            str = this._emit(rec);\n        }\n        probes && probes[minLevel].fire(function () {\n                return [ str ||\n                    (rec && log._emit(rec, true)) ||\n                    log._emit(mkRecord(msgArgs), true) ];\n        });\n    }\n}\n\n\n/**\n * The functions below log a record at a specific level.\n *\n * Usages:\n *    log.<level>()  -> boolean is-trace-enabled\n *    log.<level>(<Error> err, [<string> msg, ...])\n *    log.<level>(<string> msg, ...)\n *    log.<level>(<object> fields, <string> msg, ...)\n *\n * where <level> is the lowercase version of the log level. E.g.:\n *\n *    log.info()\n *\n * @params fields {Object} Optional set of additional fields to log.\n * @params msg {String} Log message. This can be followed by additional\n *    arguments that are handled like\n *    [util.format](http://nodejs.org/docs/latest/api/all.html#util.format).\n */\nLogger.prototype.trace = mkLogEmitter(TRACE);\nLogger.prototype.debug = mkLogEmitter(DEBUG);\nLogger.prototype.info = mkLogEmitter(INFO);\nLogger.prototype.warn = mkLogEmitter(WARN);\nLogger.prototype.error = mkLogEmitter(ERROR);\nLogger.prototype.fatal = mkLogEmitter(FATAL);\n\n\n\n//---- Standard serializers\n// A serializer is a function that serializes a JavaScript object to a\n// JSON representation for logging. There is a standard set of presumed\n// interesting objects in node.js-land.\n\nLogger.stdSerializers = {};\n\n// Serialize an HTTP request.\nLogger.stdSerializers.req = function req(req) {\n    if (!req || !req.connection)\n        return req;\n    return {\n        method: req.method,\n        url: req.url,\n        headers: req.headers,\n        remoteAddress: req.connection.remoteAddress,\n        remotePort: req.connection.remotePort\n    };\n    // Trailers: Skipping for speed. If you need trailers in your app, then\n    // make a custom serializer.\n    //if (Object.keys(trailers).length > 0) {\n    //  obj.trailers = req.trailers;\n    //}\n};\n\n// Serialize an HTTP response.\nLogger.stdSerializers.res = function res(res) {\n    if (!res || !res.statusCode)\n        return res;\n    return {\n        statusCode: res.statusCode,\n        header: res._header\n    }\n};\n\n\n/*\n * This function dumps long stack traces for exceptions having a cause()\n * method. The error classes from\n * [verror](https://github.com/davepacheco/node-verror) and\n * [restify v2.0](https://github.com/mcavage/node-restify) are examples.\n *\n * Based on `dumpException` in\n * https://github.com/davepacheco/node-extsprintf/blob/master/lib/extsprintf.js\n */\nfunction getFullErrorStack(ex)\n{\n    var ret = ex.stack || ex.toString();\n    if (ex.cause && typeof (ex.cause) === 'function') {\n        var cex = ex.cause();\n        if (cex) {\n            ret += '\\nCaused by: ' + getFullErrorStack(cex);\n        }\n    }\n    return (ret);\n}\n\n// Serialize an Error object\n// (Core error properties are enumerable in node 0.4, not in 0.6).\nvar errSerializer = Logger.stdSerializers.err = function err(err) {\n    if (!err || !err.stack)\n        return err;\n    var obj = {\n        message: err.message,\n        name: err.name,\n        stack: getFullErrorStack(err),\n        code: err.code,\n        signal: err.signal\n    }\n    return obj;\n};\n\n\n// A JSON stringifier that handles cycles safely.\n// Usage: JSON.stringify(obj, safeCycles())\nfunction safeCycles() {\n    var seen = [];\n    return function (key, val) {\n        if (!val || typeof (val) !== 'object') {\n            return val;\n        }\n        if (seen.indexOf(val) !== -1) {\n            return '[Circular]';\n        }\n        seen.push(val);\n        return val;\n    };\n}\n\n\n\nvar RotatingFileStream = null;\nif (mv) {\n\nRotatingFileStream = function RotatingFileStream(options) {\n    this.path = options.path;\n\n    this.count = (options.count == null ? 10 : options.count);\n    assert.equal(typeof (this.count), 'number',\n        format('rotating-file stream \"count\" is not a number: %j (%s) in %j',\n            this.count, typeof (this.count), this));\n    assert.ok(this.count >= 0,\n        format('rotating-file stream \"count\" is not >= 0: %j in %j',\n            this.count, this));\n\n    // Parse `options.period`.\n    if (options.period) {\n        // <number><scope> where scope is:\n        //    h   hours (at the start of the hour)\n        //    d   days (at the start of the day, i.e. just after midnight)\n        //    w   weeks (at the start of Sunday)\n        //    m   months (on the first of the month)\n        //    y   years (at the start of Jan 1st)\n        // with special values 'hourly' (1h), 'daily' (1d), \"weekly\" (1w),\n        // 'monthly' (1m) and 'yearly' (1y)\n        var period = {\n            'hourly': '1h',\n            'daily': '1d',\n            'weekly': '1w',\n            'monthly': '1m',\n            'yearly': '1y'\n        }[options.period] || options.period;\n        var m = /^([1-9][0-9]*)([hdwmy]|ms)$/.exec(period);\n        if (!m) {\n            throw new Error(format('invalid period: \"%s\"', options.period));\n        }\n        this.periodNum = Number(m[1]);\n        this.periodScope = m[2];\n    } else {\n        this.periodNum = 1;\n        this.periodScope = 'd';\n    }\n\n    var lastModified = null;\n    try {\n        var fileInfo = fs.statSync(this.path);\n        lastModified = fileInfo.mtime.getTime();\n    }\n    catch (err) {\n        // file doesn't exist\n    }\n    var rotateAfterOpen = false;\n    if (lastModified) {\n        var lastRotTime = this._calcRotTime(0);\n        if (lastModified < lastRotTime) {\n            rotateAfterOpen = true;\n        }\n    }\n\n    // TODO: template support for backup files\n    // template: <path to which to rotate>\n    //      default is %P.%n\n    //      '/var/log/archive/foo.log'  -> foo.log.%n\n    //      '/var/log/archive/foo.log.%n'\n    //      codes:\n    //          XXX support strftime codes (per node version of those)\n    //              or whatever module. Pick non-colliding for extra\n    //              codes\n    //          %P      `path` base value\n    //          %n      integer number of rotated log (1,2,3,...)\n    //          %d      datetime in YYYY-MM-DD_HH-MM-SS\n    //                      XXX what should default date format be?\n    //                          prior art? Want to avoid ':' in\n    //                          filenames (illegal on Windows for one).\n\n    this.stream = fs.createWriteStream(this.path,\n        {flags: 'a', encoding: 'utf8'});\n\n    this.rotQueue = [];\n    this.rotating = false;\n    if (rotateAfterOpen) {\n        this._debug('rotateAfterOpen -> call rotate()');\n        this.rotate();\n    } else {\n        this._setupNextRot();\n    }\n}\n\nutil.inherits(RotatingFileStream, EventEmitter);\n\nRotatingFileStream.prototype._debug = function () {\n    // Set this to `true` to add debug logging.\n    if (false) {\n        if (arguments.length === 0) {\n            return true;\n        }\n        var args = Array.prototype.slice.call(arguments);\n        args[0] = '[' + (new Date().toISOString()) + ', '\n            + this.path + '] ' + args[0];\n        console.log.apply(this, args);\n    } else {\n        return false;\n    }\n};\n\nRotatingFileStream.prototype._setupNextRot = function () {\n    this.rotAt = this._calcRotTime(1);\n    this._setRotationTimer();\n}\n\nRotatingFileStream.prototype._setRotationTimer = function () {\n    var self = this;\n    var delay = this.rotAt - Date.now();\n    // Cap timeout to Node's max setTimeout, see\n    // <https://github.com/joyent/node/issues/8656>.\n    var TIMEOUT_MAX = 2147483647; // 2^31-1\n    if (delay > TIMEOUT_MAX) {\n        delay = TIMEOUT_MAX;\n    }\n    this.timeout = setTimeout(\n        function () {\n            self._debug('_setRotationTimer timeout -> call rotate()');\n            self.rotate();\n        },\n        delay);\n    if (typeof (this.timeout.unref) === 'function') {\n        this.timeout.unref();\n    }\n}\n\nRotatingFileStream.prototype._calcRotTime =\nfunction _calcRotTime(periodOffset) {\n    this._debug('_calcRotTime: %s%s', this.periodNum, this.periodScope);\n    var d = new Date();\n\n    this._debug('  now local: %s', d);\n    this._debug('    now utc: %s', d.toISOString());\n    var rotAt;\n    switch (this.periodScope) {\n    case 'ms':\n        // Hidden millisecond period for debugging.\n        if (this.rotAt) {\n            rotAt = this.rotAt + this.periodNum * periodOffset;\n        } else {\n            rotAt = Date.now() + this.periodNum * periodOffset;\n        }\n        break;\n    case 'h':\n        if (this.rotAt) {\n            rotAt = this.rotAt + this.periodNum * 60 * 60 * 1000 * periodOffset;\n        } else {\n            // First time: top of the next hour.\n            rotAt = Date.UTC(d.getUTCFullYear(), d.getUTCMonth(),\n                d.getUTCDate(), d.getUTCHours() + periodOffset);\n        }\n        break;\n    case 'd':\n        if (this.rotAt) {\n            rotAt = this.rotAt + this.periodNum * 24 * 60 * 60 * 1000\n                * periodOffset;\n        } else {\n            // First time: start of tomorrow (i.e. at the coming midnight) UTC.\n            rotAt = Date.UTC(d.getUTCFullYear(), d.getUTCMonth(),\n                d.getUTCDate() + periodOffset);\n        }\n        break;\n    case 'w':\n        // Currently, always on Sunday morning at 00:00:00 (UTC).\n        if (this.rotAt) {\n            rotAt = this.rotAt + this.periodNum * 7 * 24 * 60 * 60 * 1000\n                * periodOffset;\n        } else {\n            // First time: this coming Sunday.\n            var dayOffset = (7 - d.getUTCDay());\n            if (periodOffset < 1) {\n                dayOffset = -d.getUTCDay();\n            }\n            if (periodOffset > 1 || periodOffset < -1) {\n                dayOffset += 7 * periodOffset;\n            }\n            rotAt = Date.UTC(d.getUTCFullYear(), d.getUTCMonth(),\n                d.getUTCDate() + dayOffset);\n        }\n        break;\n    case 'm':\n        if (this.rotAt) {\n            rotAt = Date.UTC(d.getUTCFullYear(),\n                d.getUTCMonth() + this.periodNum * periodOffset, 1);\n        } else {\n            // First time: the start of the next month.\n            rotAt = Date.UTC(d.getUTCFullYear(),\n                d.getUTCMonth() + periodOffset, 1);\n        }\n        break;\n    case 'y':\n        if (this.rotAt) {\n            rotAt = Date.UTC(d.getUTCFullYear() + this.periodNum * periodOffset,\n                0, 1);\n        } else {\n            // First time: the start of the next year.\n            rotAt = Date.UTC(d.getUTCFullYear() + periodOffset, 0, 1);\n        }\n        break;\n    default:\n        assert.fail(format('invalid period scope: \"%s\"', this.periodScope));\n    }\n\n    if (this._debug()) {\n        this._debug('  **rotAt**: %s (utc: %s)', rotAt,\n            new Date(rotAt).toUTCString());\n        var now = Date.now();\n        this._debug('        now: %s (%sms == %smin == %sh to go)',\n            now,\n            rotAt - now,\n            (rotAt-now)/1000/60,\n            (rotAt-now)/1000/60/60);\n    }\n    return rotAt;\n};\n\nRotatingFileStream.prototype.rotate = function rotate() {\n    // XXX What about shutdown?\n    var self = this;\n\n    // If rotation period is > ~25 days, we have to break into multiple\n    // setTimeout's. See <https://github.com/joyent/node/issues/8656>.\n    if (self.rotAt && self.rotAt > Date.now()) {\n        return self._setRotationTimer();\n    }\n\n    this._debug('rotate');\n    if (self.rotating) {\n        throw new TypeError('cannot start a rotation when already rotating');\n    }\n    self.rotating = true;\n\n    self.stream.end();  // XXX can do moves sync after this? test at high rate\n\n    function del() {\n        var toDel = self.path + '.' + String(n - 1);\n        if (n === 0) {\n            toDel = self.path;\n        }\n        n -= 1;\n        self._debug('  rm %s', toDel);\n        fs.unlink(toDel, function (delErr) {\n            //XXX handle err other than not exists\n            moves();\n        });\n    }\n\n    function moves() {\n        if (self.count === 0 || n < 0) {\n            return finish();\n        }\n        var before = self.path;\n        var after = self.path + '.' + String(n);\n        if (n > 0) {\n            before += '.' + String(n - 1);\n        }\n        n -= 1;\n        fs.exists(before, function (exists) {\n            if (!exists) {\n                moves();\n            } else {\n                self._debug('  mv %s %s', before, after);\n                mv(before, after, function (mvErr) {\n                    if (mvErr) {\n                        self.emit('error', mvErr);\n                        finish(); // XXX finish here?\n                    } else {\n                        moves();\n                    }\n                });\n            }\n        })\n    }\n\n    function finish() {\n        self._debug('  open %s', self.path);\n        self.stream = fs.createWriteStream(self.path,\n            {flags: 'a', encoding: 'utf8'});\n        var q = self.rotQueue, len = q.length;\n        for (var i = 0; i < len; i++) {\n            self.stream.write(q[i]);\n        }\n        self.rotQueue = [];\n        self.rotating = false;\n        self.emit('drain');\n        self._setupNextRot();\n    }\n\n    var n = this.count;\n    del();\n};\n\nRotatingFileStream.prototype.write = function write(s) {\n    if (this.rotating) {\n        this.rotQueue.push(s);\n        return false;\n    } else {\n        return this.stream.write(s);\n    }\n};\n\nRotatingFileStream.prototype.end = function end(s) {\n    this.stream.end();\n};\n\nRotatingFileStream.prototype.destroy = function destroy(s) {\n    this.stream.destroy();\n};\n\nRotatingFileStream.prototype.destroySoon = function destroySoon(s) {\n    this.stream.destroySoon();\n};\n\n} /* if (mv) */\n\n\n\n/**\n * RingBuffer is a Writable Stream that just stores the last N records in\n * memory.\n *\n * @param options {Object}, with the following fields:\n *\n *    - limit: number of records to keep in memory\n */\nfunction RingBuffer(options) {\n    this.limit = options && options.limit ? options.limit : 100;\n    this.writable = true;\n    this.records = [];\n    EventEmitter.call(this);\n}\n\nutil.inherits(RingBuffer, EventEmitter);\n\nRingBuffer.prototype.write = function (record) {\n    if (!this.writable)\n        throw (new Error('RingBuffer has been ended already'));\n\n    this.records.push(record);\n\n    if (this.records.length > this.limit)\n        this.records.shift();\n\n    return (true);\n};\n\nRingBuffer.prototype.end = function () {\n    if (arguments.length > 0)\n        this.write.apply(this, Array.prototype.slice.call(arguments));\n    this.writable = false;\n};\n\nRingBuffer.prototype.destroy = function () {\n    this.writable = false;\n    this.emit('close');\n};\n\nRingBuffer.prototype.destroySoon = function () {\n    this.destroy();\n};\n\n\n//---- Exports\n\nmodule.exports = Logger;\n\nmodule.exports.TRACE = TRACE;\nmodule.exports.DEBUG = DEBUG;\nmodule.exports.INFO = INFO;\nmodule.exports.WARN = WARN;\nmodule.exports.ERROR = ERROR;\nmodule.exports.FATAL = FATAL;\nmodule.exports.resolveLevel = resolveLevel;\nmodule.exports.levelFromName = levelFromName;\nmodule.exports.nameFromLevel = nameFromLevel;\n\nmodule.exports.VERSION = VERSION;\nmodule.exports.LOG_VERSION = LOG_VERSION;\n\nmodule.exports.createLogger = function createLogger(options) {\n    return new Logger(options);\n};\n\nmodule.exports.RingBuffer = RingBuffer;\nmodule.exports.RotatingFileStream = RotatingFileStream;\n\n// Useful for custom `type == 'raw'` streams that may do JSON stringification\n// of log records themselves. Usage:\n//    var str = JSON.stringify(rec, bunyan.safeCycles());\nmodule.exports.safeCycles = safeCycles;\n","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\n// tslint:disable-next-line:ordered-imports\n// @ts-ignore No typings available for our copy of bunyan\nimport * as Bunyan from '@salesforce/bunyan';\nimport { parseJson, parseJsonMap } from '@salesforce/kit';\nimport {\n  Dictionary,\n  ensure,\n  ensureNumber,\n  isArray,\n  isFunction,\n  isKeyOf,\n  isObject,\n  isPlainObject,\n  isString,\n  Many,\n  Optional\n} from '@salesforce/ts-types';\nimport * as Debug from 'debug';\nimport { EventEmitter } from 'events';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { Writable } from 'stream';\nimport { Global, Mode } from './global';\nimport { SfdxError } from './sfdxError';\nimport { fs } from './util/fs';\n\n/**\n * A Bunyan `Serializer` function.\n * @param input The input to be serialized.\n * **See** {@link https://github.com/forcedotcom/node-bunyan#serializers|Bunyan Serializers API}\n */\nexport type Serializer = (input: any) => any; // tslint:disable-line:no-any\n\n/**\n * A collection of named `Serializer`s.\n *\n * **See** {@link https://github.com/forcedotcom/node-bunyan#serializers|Bunyan Serializers API}\n */\nexport interface Serializers {\n  [key: string]: Serializer;\n}\n\n/**\n * The common set of `Logger` options.\n */\nexport interface LoggerOptions {\n  /**\n   * The logger name.\n   */\n  name: string;\n\n  /**\n   * The logger format type. Current options include LogFmt or JSON (default).\n   */\n  format?: LoggerFormat;\n\n  /**\n   * The logger's serializers.\n   */\n  serializers?: Serializers;\n  /**\n   * Whether or not to log source file, line, and function information.\n   */\n  src?: boolean;\n  /**\n   * The desired log level.\n   */\n  level?: LoggerLevelValue;\n  /**\n   * A stream to write to.\n   */\n  stream?: Writable;\n  /**\n   * An array of streams to write to.\n   */\n  streams?: LoggerStream[];\n}\n\n/**\n * Standard `Logger` levels.\n *\n * **See** {@link https://github.com/forcedotcom/node-bunyan#levels|Bunyan Levels}\n */\nexport enum LoggerLevel {\n  TRACE = 10,\n  DEBUG = 20,\n  INFO = 30,\n  WARN = 40,\n  ERROR = 50,\n  FATAL = 60\n}\n\n/**\n *  `Logger` format types.\n */\nexport enum LoggerFormat {\n  JSON,\n  LOGFMT\n}\n\n/**\n * A Bunyan stream configuration.\n *\n * @see {@link https://github.com/forcedotcom/node-bunyan#streams|Bunyan Streams}\n */\nexport interface LoggerStream {\n  /**\n   * The type of stream -- may be inferred from other properties.\n   */\n  type?: string;\n  /**\n   * The desired log level for the stream.\n   */\n  level?: LoggerLevelValue;\n  /**\n   * The stream to write to.  Mutually exclusive with `path`.\n   */\n  stream?: Writable;\n  /**\n   * The name of the stream.\n   */\n  name?: string;\n  /**\n   * A log file path to write to.  Mutually exclusive with `stream`.\n   */\n  path?: string;\n  [key: string]: any; // tslint:disable-line:no-any\n}\n\n/**\n * Any numeric `Logger` level.\n */\nexport type LoggerLevelValue = LoggerLevel | number;\n\n/**\n * A collection of named `FieldValue`s.\n *\n * **See** {@link https://github.com/forcedotcom/node-bunyan#log-record-fields|Bunyan Log Record Fields}\n */\nexport interface Fields {\n  [key: string]: FieldValue;\n}\n\n/**\n * All possible field value types.\n */\nexport type FieldValue = string | number | boolean;\n\n/**\n * Log line interface\n */\nexport interface LogLine {\n  name: string;\n  hostname: string;\n  pid: string;\n  log: string;\n  level: number;\n  msg: string;\n  time: string;\n  v: number;\n}\n\n/**\n * A logging abstraction powered by {@link https://github.com/forcedotcom/node-bunyan|Bunyan} that provides both a default\n * logger configuration that will log to `sfdx.log`, and a way to create custom loggers based on the same foundation.\n *\n * ```\n * // Gets the root sfdx logger\n * const logger = await Logger.root();\n *\n * // Creates a child logger of the root sfdx logger with custom fields applied\n * const childLogger = await Logger.child('myRootChild', {tag: 'value'});\n *\n * // Creates a custom logger unaffiliated with the root logger\n * const myCustomLogger = new Logger('myCustomLogger');\n *\n * // Creates a child of a custom logger unaffiliated with the root logger with custom fields applied\n * const myCustomChildLogger = myCustomLogger.child('myCustomChild', {tag: 'value'});\n * ```\n * **See** https://github.com/forcedotcom/node-bunyan\n *\n * **See** https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_cli_log_messages.htm\n */\nexport class Logger {\n  /**\n   * The name of the root sfdx `Logger`.\n   */\n  public static readonly ROOT_NAME = 'sfdx';\n\n  /**\n   * The default `LoggerLevel` when constructing new `Logger` instances.\n   */\n  public static readonly DEFAULT_LEVEL = LoggerLevel.WARN;\n\n  /**\n   * A list of all lower case `LoggerLevel` names.\n   *\n   * **See** {@link LoggerLevel}\n   */\n  public static readonly LEVEL_NAMES = Object.values(LoggerLevel)\n    .filter(isString)\n    .map(v => v.toLowerCase());\n\n  /**\n   * Gets the root logger with the default level and file stream.\n   */\n  public static async root(): Promise<Logger> {\n    if (this.rootLogger) {\n      return this.rootLogger;\n    }\n    const rootLogger = (this.rootLogger = new Logger(Logger.ROOT_NAME).setLevel());\n    // disable log file writing, if applicable\n    if (process.env.SFDX_DISABLE_LOG_FILE !== 'true' && Global.getEnvironmentMode() !== Mode.TEST) {\n      await rootLogger.addLogFileStream(Global.LOG_FILE_PATH);\n    }\n\n    // The debug library does this for you, but no point setting up the stream if it isn't there\n    if (process.env.DEBUG) {\n      const debuggers: Dictionary<Debug.IDebugger> = {};\n\n      debuggers.core = Debug(`${rootLogger.getName()}:core`);\n\n      rootLogger.addStream({\n        name: 'debug',\n        stream: new Writable({\n          write: (chunk, encoding, next) => {\n            const json = parseJsonMap(chunk.toString());\n            let debuggerName = 'core';\n            if (isString(json.log)) {\n              debuggerName = json.log;\n              if (!debuggers[debuggerName]) {\n                debuggers[debuggerName] = Debug(`${rootLogger.getName()}:${debuggerName}`);\n              }\n            }\n            const level = LoggerLevel[ensureNumber(json.level)];\n            ensure(debuggers[debuggerName])(`${level} ${json.msg}`);\n            next();\n          }\n        }),\n        // Consume all levels\n        level: 0\n      });\n    }\n\n    return rootLogger;\n  }\n\n  /**\n   * Destroys the root `Logger`.\n   *\n   * @ignore\n   */\n  public static destroyRoot(): void {\n    if (this.rootLogger) {\n      this.rootLogger.close();\n      this.rootLogger = undefined;\n    }\n  }\n\n  /**\n   * Create a child of the root logger, inheriting this instance's configuration such as `level`, `streams`, etc.\n   *\n   * @param name The name of the child logger.\n   * @param fields Additional fields included in all log lines.\n   */\n  public static async child(name: string, fields?: Fields): Promise<Logger> {\n    return (await Logger.root()).child(name, fields);\n  }\n\n  /**\n   * Gets a numeric `LoggerLevel` value by string name.\n   *\n   * @param {string} levelName The level name to convert to a `LoggerLevel` enum value.\n   *\n   * **Throws** *{@link SfdxError}{ name: 'UnrecognizedLoggerLevelName' }* The level name was not case-insensitively recognized as a valid `LoggerLevel` value.\n   * @see {@Link LoggerLevel}\n   */\n  public static getLevelByName(levelName: string): LoggerLevelValue {\n    levelName = levelName.toUpperCase();\n    if (!isKeyOf(LoggerLevel, levelName)) {\n      throw new SfdxError('UnrecognizedLoggerLevelName');\n    }\n    return LoggerLevel[levelName];\n  }\n\n  // Rollup all instance-specific process event listeners together to prevent global `MaxListenersExceededWarning`s.\n  private static readonly lifecycle = (() => {\n    const events = new EventEmitter();\n    events.setMaxListeners(0); // never warn on listener counts\n    process.on('uncaughtException', err => events.emit('uncaughtException', err));\n    process.on('exit', () => events.emit('exit'));\n    return events;\n  })();\n\n  // The sfdx root logger singleton\n  private static rootLogger?: Logger;\n\n  // The actual Bunyan logger\n  private bunyan: Bunyan;\n\n  private format: LoggerFormat;\n  /**\n   * Constructs a new `Logger`.\n   *\n   * @param optionsOrName A set of `LoggerOptions` or name to use with the default options.\n   *\n   * **Throws** *{@link SfdxError}{ name: 'RedundantRootLogger' }* More than one attempt is made to construct the root\n   * `Logger`.\n   */\n  public constructor(optionsOrName: LoggerOptions | string) {\n    let options: LoggerOptions;\n    if (typeof optionsOrName === 'string') {\n      options = {\n        name: optionsOrName,\n        level: Logger.DEFAULT_LEVEL,\n        serializers: Bunyan.stdSerializers\n      };\n    } else {\n      options = optionsOrName;\n    }\n\n    if (Logger.rootLogger && options.name === Logger.ROOT_NAME) {\n      throw new SfdxError('RedundantRootLogger');\n    }\n\n    // Inspect format to know what logging format to use then delete from options to\n    // ensure it doesn't conflict with Bunyan.\n    this.format = options.format || LoggerFormat.JSON;\n    delete options.format;\n\n    // If the log format is LOGFMT, we need to convert any stream(s) into a LOGFMT type stream.\n    if (this.format === LoggerFormat.LOGFMT && options.stream) {\n      const ls: LoggerStream = this.createLogFmtFormatterStream({ stream: options.stream });\n      options.stream = ls.stream;\n    }\n    if (this.format === LoggerFormat.LOGFMT && options.streams) {\n      const logFmtConvertedStreams: LoggerStream[] = [];\n      options.streams.forEach((ls: LoggerStream) => {\n        logFmtConvertedStreams.push(this.createLogFmtFormatterStream(ls));\n      });\n      options.streams = logFmtConvertedStreams;\n    }\n\n    this.bunyan = new Bunyan(options);\n    this.bunyan.name = options.name;\n    this.bunyan.filters = [];\n\n    if (!options.streams && !options.stream) {\n      this.bunyan.streams = [];\n    }\n\n    // all SFDX loggers must filter sensitive data\n    this.addFilter((...args) => _filter(...args));\n\n    if (Global.getEnvironmentMode() !== Mode.TEST) {\n      Logger.lifecycle.on('uncaughtException', this.uncaughtExceptionHandler);\n      Logger.lifecycle.on('exit', this.exitHandler);\n    }\n\n    this.trace(`Created '${this.getName()}' logger instance`);\n  }\n\n  /**\n   * Adds a stream.\n   *\n   * @param stream The stream configuration to add.\n   * @param defaultLevel The default level of the stream.\n   */\n  public addStream(stream: LoggerStream, defaultLevel?: LoggerLevelValue): void {\n    if (this.format === LoggerFormat.LOGFMT) {\n      stream = this.createLogFmtFormatterStream(stream);\n    }\n    this.bunyan.addStream(stream, defaultLevel);\n  }\n\n  /**\n   * Adds a file stream to this logger. Resolved or rejected upon completion of the addition.\n   *\n   * @param logFile The path to the log file.  If it doesn't exist it will be created.\n   */\n  public async addLogFileStream(logFile: string): Promise<void> {\n    try {\n      // Check if we have write access to the log file (i.e., we created it already)\n      await fs.access(logFile, fs.constants.W_OK);\n    } catch (err1) {\n      try {\n        await fs.mkdirp(path.dirname(logFile), {\n          mode: fs.DEFAULT_USER_DIR_MODE\n        });\n      } catch (err2) {\n        // noop; directory exists already\n      }\n      try {\n        await fs.writeFile(logFile, '', { mode: fs.DEFAULT_USER_FILE_MODE });\n      } catch (err3) {\n        throw SfdxError.wrap(err3);\n      }\n    }\n\n    // avoid multiple streams to same log file\n    if (\n      !this.bunyan.streams.find(\n        // tslint:disable-next-line:no-any No bunyan typings\n        (stream: any) => stream.type === 'file' && stream.path === logFile\n      )\n    ) {\n      // TODO: rotating-file\n      // https://github.com/trentm/node-bunyan#stream-type-rotating-file\n      this.addStream({\n        type: 'file',\n        path: logFile,\n        level: this.bunyan.level() as number\n      });\n    }\n  }\n\n  /**\n   * Gets the name of this logger.\n   */\n  public getName(): string {\n    return this.bunyan.name;\n  }\n\n  /**\n   * Gets the current level of this logger.\n   */\n  public getLevel(): LoggerLevelValue {\n    return this.bunyan.level();\n  }\n\n  /**\n   * Set the logging level of all streams for this logger.  If a specific `level` is not provided, this method will\n   * attempt to read it from the environment variable `SFDX_LOG_LEVEL`, and if not found,\n   * {@link Logger.DEFAULT_LOG_LEVEL} will be used instead. For convenience `this` object is returned.\n   *\n   * @param {LoggerLevelValue} [level] The logger level.\n   *\n   * **Throws** *{@link SfdxError}{ name: 'UnrecognizedLoggerLevelName' }* A value of `level` read from `SFDX_LOG_LEVEL`\n   * was invalid.\n   *\n   * ```\n   * // Sets the level from the environment or default value\n   * logger.setLevel()\n   *\n   * // Set the level from the INFO enum\n   * logger.setLevel(LoggerLevel.INFO)\n   *\n   * // Sets the level case-insensitively from a string value\n   * logger.setLevel(Logger.getLevelByName('info'))\n   * ```\n   */\n  public setLevel(level?: LoggerLevelValue): Logger {\n    if (level == null) {\n      level = process.env.SFDX_LOG_LEVEL ? Logger.getLevelByName(process.env.SFDX_LOG_LEVEL) : Logger.DEFAULT_LEVEL;\n    }\n    this.bunyan.level(level);\n    return this;\n  }\n\n  /**\n   * Gets the underlying Bunyan logger.\n   */\n  // tslint:disable-next-line:no-any\n  public getBunyanLogger(): any {\n    return this.bunyan;\n  }\n\n  /**\n   * Compares the requested log level with the current log level.  Returns true if\n   * the requested log level is greater than or equal to the current log level.\n   *\n   * @param level The requested log level to compare against the currently set log level.\n   */\n  public shouldLog(level: LoggerLevelValue): boolean {\n    if (typeof level === 'string') {\n      level = Bunyan.levelFromName(level) as number;\n    }\n    return level >= this.getLevel();\n  }\n\n  /**\n   * Use in-memory logging for this logger instance instead of any parent streams. Useful for testing.\n   * For convenience this object is returned.\n   *\n   * **WARNING: This cannot be undone for this logger instance.**\n   */\n  public useMemoryLogging(): Logger {\n    this.bunyan.streams = [];\n    this.bunyan.ringBuffer = new Bunyan.RingBuffer({ limit: 5000 });\n    this.addStream({\n      type: 'raw',\n      stream: this.bunyan.ringBuffer,\n      level: this.bunyan.level()\n    });\n    return this;\n  }\n\n  /**\n   * Gets an array of log line objects. Each element is an object that corresponds to a log line.\n   */\n  public getBufferedRecords(): LogLine[] {\n    if (this.bunyan.ringBuffer) {\n      return this.bunyan.ringBuffer.records;\n    }\n    return [];\n  }\n\n  /**\n   * Reads a text blob of all the log lines contained in memory or the log file.\n   */\n  public readLogContentsAsText(): string {\n    if (this.bunyan.ringBuffer) {\n      return this.getBufferedRecords().reduce((accum, line) => {\n        accum += JSON.stringify(line) + os.EOL;\n        return accum;\n      }, '');\n    } else {\n      let content = '';\n      // tslint:disable-next-line:no-any No bunyan typings\n      this.bunyan.streams.forEach(async (stream: any) => {\n        if (stream.type === 'file') {\n          content += await fs.readFile(stream.path, 'utf8');\n        }\n      });\n      return content;\n    }\n  }\n\n  /**\n   * Adds a filter to be applied to all logged messages.\n   *\n   * @param filter A function with signature `(...args: any[]) => any[]` that transforms log message arguments.\n   */\n  public addFilter(filter: (...args: unknown[]) => unknown): void {\n    // tslint:disable-line:no-any\n    if (!this.bunyan.filters) {\n      this.bunyan.filters = [];\n    }\n    this.bunyan.filters.push(filter);\n  }\n\n  /**\n   * Close the logger, including any streams, and remove all listeners.\n   *\n   * @param fn A function with signature `(stream: LoggerStream) => void` to call for each stream with\n   *                        the stream as an arg.\n   */\n  public close(fn?: (stream: LoggerStream) => void): void {\n    if (this.bunyan.streams) {\n      try {\n        this.bunyan.streams.forEach((entry: LoggerStream) => {\n          if (fn) {\n            fn(entry);\n          }\n          // close file streams, flush buffer to disk\n          if (entry.type === 'file' && entry.stream && isFunction(entry.stream.end)) {\n            entry.stream.end();\n          }\n        });\n      } finally {\n        Logger.lifecycle.removeListener('uncaughtException', this.uncaughtExceptionHandler);\n        Logger.lifecycle.removeListener('exit', this.exitHandler);\n      }\n    }\n  }\n\n  /**\n   * Create a child logger, typically to add a few log record fields. For convenience this object is returned.\n   *\n   * @param name The name of the child logger that is emitted w/ log line as `log:<name>`.\n   * @param fields Additional fields included in all log lines for the child logger.\n   */\n  public child(name: string, fields: Fields = {}): Logger {\n    if (!name) {\n      throw new SfdxError('LoggerNameRequired');\n    }\n    fields.log = name;\n\n    const child = new Logger(name);\n    // only support including additional fields on log line (no config)\n    child.bunyan = this.bunyan.child(fields, true);\n    child.bunyan.name = name;\n    child.bunyan.filters = this.bunyan.filters;\n\n    this.trace(`Setup child '${name}' logger instance`);\n\n    return child;\n  }\n\n  /**\n   * Add a field to all log lines for this logger. For convenience `this` object is returned.\n   *\n   * @param name The name of the field to add.\n   * @param value The value of the field to be logged.\n   */\n  public addField(name: string, value: FieldValue): Logger {\n    this.bunyan.fields[name] = value;\n    return this;\n  }\n\n  /**\n   * Logs at `trace` level with filtering applied. For convenience `this` object is returned.\n   *\n   * @param args Any number of arguments to be logged.\n   */\n  // tslint:disable-next-line:no-any\n  public trace(...args: any[]): Logger {\n    this.bunyan.trace(this.applyFilters(LoggerLevel.TRACE, ...args));\n    return this;\n  }\n\n  /**\n   * Logs at `debug` level with filtering applied. For convenience `this` object is returned.\n   *\n   * @param args Any number of arguments to be logged.\n   */\n  public debug(...args: unknown[]): Logger {\n    this.bunyan.debug(this.applyFilters(LoggerLevel.DEBUG, ...args));\n    return this;\n  }\n\n  /**\n   * Logs at `debug` level with filtering applied.\n   *\n   * @param cb A callback that returns on array objects to be logged.\n   */\n  public debugCallback(cb: () => unknown[] | string) {\n    if (this.getLevel() === LoggerLevel.DEBUG || process.env.DEBUG) {\n      const result = cb();\n      if (isArray(result)) {\n        this.bunyan.debug(this.applyFilters(LoggerLevel.DEBUG, ...result));\n      } else {\n        this.bunyan.debug(this.applyFilters(LoggerLevel.DEBUG, ...[result]));\n      }\n    }\n  }\n\n  /**\n   * Logs at `info` level with filtering applied. For convenience `this` object is returned.\n   *\n   * @param args Any number of arguments to be logged.\n   */\n  public info(...args: unknown[]): Logger {\n    this.bunyan.info(this.applyFilters(LoggerLevel.INFO, ...args));\n    return this;\n  }\n\n  /**\n   * Logs at `warn` level with filtering applied. For convenience `this` object is returned.\n   *\n   * @param args Any number of arguments to be logged.\n   */\n  public warn(...args: unknown[]): Logger {\n    this.bunyan.warn(this.applyFilters(LoggerLevel.WARN, ...args));\n    return this;\n  }\n\n  /**\n   * Logs at `error` level with filtering applied. For convenience `this` object is returned.\n   *\n   * @param args Any number of arguments to be logged.\n   */\n  public error(...args: unknown[]): Logger {\n    this.bunyan.error(this.applyFilters(LoggerLevel.ERROR, ...args));\n    return this;\n  }\n\n  /**\n   * Logs at `fatal` level with filtering applied. For convenience `this` object is returned.\n   *\n   * @param args Any number of arguments to be logged.\n   */\n  public fatal(...args: unknown[]): Logger {\n    // always show fatal to stderr\n    console.error(...args);\n    this.bunyan.fatal(this.applyFilters(LoggerLevel.FATAL, ...args));\n    return this;\n  }\n\n  private applyFilters(logLevel: LoggerLevel, ...args: unknown[]): Optional<Many<unknown>> {\n    if (this.shouldLog(logLevel)) {\n      // tslint:disable-next-line:no-any No bunyan typings\n      this.bunyan.filters.forEach((filter: any) => (args = filter(...args)));\n    }\n    return args && args.length === 1 ? args[0] : args;\n  }\n\n  private uncaughtExceptionHandler = (err: Error) => {\n    // W-7558552\n    // Only log uncaught exceptions in root logger\n    if (this === Logger.rootLogger) {\n      // log the exception\n      // FIXME: good chance this won't be logged because\n      // process.exit was called before this is logged\n      // https://github.com/trentm/node-bunyan/issues/95\n      this.fatal(err);\n    }\n  };\n\n  private exitHandler = () => {\n    this.close();\n  };\n\n  private createLogFmtFormatterStream(loggerStream: LoggerStream): LoggerStream {\n    const logFmtWriteableStream = new Writable({\n      write: (chunk, enc, cb) => {\n        try {\n          const parsedJSON = JSON.parse(chunk.toString());\n          const keys = Object.keys(parsedJSON);\n\n          let logEntry = '';\n          keys.forEach(key => {\n            let logMsg = `${parsedJSON[key]}`;\n            if (logMsg.trim().includes(' ')) {\n              logMsg = `\"${logMsg}\"`;\n            }\n            logEntry += `${key}=${logMsg} `;\n          });\n          if (loggerStream.stream) {\n            loggerStream.stream.write(logEntry.trimRight() + '\\n');\n          }\n        } catch (error) {\n          if (loggerStream.stream) {\n            loggerStream.stream.write(chunk.toString());\n          }\n        }\n        cb(null);\n      }\n    });\n\n    return Object.assign({}, loggerStream, { stream: logFmtWriteableStream });\n  }\n}\n\ntype FilteredKey = string | { name: string; regex: string };\n\n// Ok to log clientid\nconst FILTERED_KEYS: FilteredKey[] = [\n  'sid',\n  'Authorization',\n  // Any json attribute that contains the words \"access\" and \"token\" will have the attribute/value hidden\n  { name: 'access_token', regex: 'access[^\\'\"]*token' },\n  // Any json attribute that contains the words \"refresh\" and \"token\" will have the attribute/value hidden\n  { name: 'refresh_token', regex: 'refresh[^\\'\"]*token' },\n  'clientsecret',\n  // Any json attribute that contains the words \"sfdx\", \"auth\", and \"url\" will have the attribute/value hidden\n  { name: 'sfdxauthurl', regex: 'sfdx[^\\'\"]*auth[^\\'\"]*url' }\n];\n\n// SFDX code and plugins should never show tokens or connect app information in the logs\nconst _filter = (...args: unknown[]): unknown => {\n  return args.map(arg => {\n    if (isArray(arg)) {\n      return _filter(...arg);\n    }\n\n    if (arg) {\n      let _arg: string;\n\n      // Normalize all objects into a string. This include errors.\n      if (arg instanceof Buffer) {\n        _arg = '<Buffer>';\n      } else if (isObject(arg)) {\n        _arg = JSON.stringify(arg);\n      } else if (isString(arg)) {\n        _arg = arg;\n      } else {\n        _arg = '';\n      }\n\n      const HIDDEN = 'HIDDEN';\n\n      FILTERED_KEYS.forEach((key: FilteredKey) => {\n        let expElement = key;\n        let expName = key;\n\n        // Filtered keys can be strings or objects containing regular expression components.\n        if (isPlainObject(key)) {\n          expElement = key.regex;\n          expName = key.name;\n        }\n\n        const hiddenAttrMessage = `\"<${expName} - ${HIDDEN}>\"`;\n\n        // Match all json attribute values case insensitive: ex. {\" Access*^&(*()^* Token \" : \" 45143075913458901348905 \\n\\t\" ...}\n        const regexTokens = new RegExp(`(['\"][^'\"]*${expElement}[^'\"]*['\"]\\\\s*:\\\\s*)['\"][^'\"]*['\"]`, 'gi');\n\n        _arg = _arg.replace(regexTokens, `$1${hiddenAttrMessage}`);\n\n        // Match all key value attribute case insensitive: ex. {\" key\\t\"    : ' access_token  ' , \" value \" : \"  dsafgasr431 \" ....}\n        const keyRegex = new RegExp(\n          `(['\"]\\\\s*key\\\\s*['\"]\\\\s*:)\\\\s*['\"]\\\\s*${expElement}\\\\s*['\"]\\\\s*.\\\\s*['\"]\\\\s*value\\\\s*['\"]\\\\s*:\\\\s*['\"]\\\\s*[^'\"]*['\"]`,\n          'gi'\n        );\n        _arg = _arg.replace(keyRegex, `$1${hiddenAttrMessage}`);\n      });\n\n      // This is a jsforce message we are masking. This can be removed after the following pull request is committed\n      // and pushed to a jsforce release.\n      //\n      // Looking  For: \"Refreshed access token = ...\"\n      // Related Jsforce pull requests:\n      //  https://github.com/jsforce/jsforce/pull/598\n      //  https://github.com/jsforce/jsforce/pull/608\n      //  https://github.com/jsforce/jsforce/pull/609\n      const jsForceTokenRefreshRegEx = new RegExp('Refreshed(.*)access(.*)token(.*)=\\\\s*[^\\'\"\\\\s*]*');\n      _arg = _arg.replace(jsForceTokenRefreshRegEx, `<refresh_token - ${HIDDEN}>`);\n\n      _arg = _arg.replace(/sid=(.*)/, `sid=<${HIDDEN}>`);\n\n      // return an object if an object was logged; otherwise return the filtered string.\n      return isObject(arg) ? parseJson(_arg) : _arg;\n    } else {\n      return arg;\n    }\n  });\n};\n"],"names":["require$$0","require$$1","require","require$$2","require$$3","safeJsonStringify","require$$4","util","assert","LoggerLevel","LoggerFormat","Logger","Bunyan.stdSerializers","SfdxError","Global","Mode","Debug","Writable","parseJsonMap","isString","ensureNumber","ensure","isKeyOf","fs","path.dirname","Bunyan.levelFromName","Bunyan.RingBuffer","os.EOL","isFunction","isArray","events","EventEmitter","isObject","isPlainObject","parseJson"],"mappings":"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"}